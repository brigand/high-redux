<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[High Redux]]></title><description><![CDATA[High Redux: awesome abstractions on top of redux]]></description><link>https://brigand.github.iohigh-redux</link><image><url>https://brigand.github.iohigh-redux/logos/logo-512.png</url><title>High Redux</title><link>https://brigand.github.iohigh-redux</link></image><generator>GatsbyJS Material Starter</generator><lastBuildDate>Thu, 04 Jan 2018 03:43:03 GMT</lastBuildDate><atom:link href="https://brigand.github.iohigh-redux/rss.xml" rel="self" type="application/rss+xml"/><author><![CDATA[Frankie Bagnardi]]></author><copyright><![CDATA[Copyright Â© 2017. Frankie Bagnardi]]></copyright><item><title><![CDATA[makeHr]]></title><description><![CDATA[Basics  replaces the classic reducer function with a high reducer. There are
10s of libraries that change the way you define reducers. The...]]></description><link>https://brigand.github.iohigh-redux/make-hr</link><guid isPermaLink="false">https://brigand.github.iohigh-redux/make-hr</guid><category><![CDATA[programming]]></category><category><![CDATA[react]]></category><category><![CDATA[high-redux]]></category><dc:creator><![CDATA[Frankie Bagnardi]]></dc:creator><pubDate>Sun, 01 Jan 2017 07:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;basics&quot;&gt;&lt;a href=&quot;#basics&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;makeHr&lt;/code&gt; replaces the classic reducer function with a high reducer. There are
10s of libraries that change the way you define reducers. The ones I&apos;ve looked
at are simple syntax sugar. In high-redux, we provide a reducer abstraction
that&apos;s designed to handle changes to your code over time, while not producing
a lot of extra complexity in the reducer definition, nor extra code in your
components/selectors for accessing the state in simple cases.&lt;/p&gt;
&lt;p&gt;Let&apos;s start with the basic example found on the intro page:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; userHr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeHr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  actions&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    FETCH_USER_SUCCESS&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;payload&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;First we have the name. By defining where our reducer will be mounted onto the
redux store state, we can know how to query it by looking at just this file,
and we can implement state selectors in the same file (more on that later).&lt;/p&gt;
&lt;h2 id=&quot;top-level&quot;&gt;&lt;a href=&quot;#top-level&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Top Level&lt;/h2&gt;
&lt;p&gt;The top level properties of the object you pass to &lt;code&gt;makeHr&lt;/code&gt; are &lt;code&gt;&apos;name&apos;&lt;/code&gt;, &lt;code&gt;&apos;actions&apos;&lt;/code&gt;,
and &lt;code&gt;&apos;selectors&apos;&lt;/code&gt;. We covered &lt;code&gt;&apos;name&apos;&lt;/code&gt; above, so let&apos;s go into &apos;actions&apos;.&lt;/p&gt;
&lt;h2 id=&quot;actions&quot;&gt;&lt;a href=&quot;#actions&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actions&lt;/h2&gt;
&lt;p&gt;Each property of the &lt;code&gt;&apos;actions&apos;&lt;/code&gt; object is the type of an action. In this example,
we have &lt;code&gt;&apos;FETCH_USER_SUCCESS&apos;&lt;/code&gt;. You can define as many actions as you like.&lt;/p&gt;
&lt;p&gt;Your action handlers receive three arguments. &lt;code&gt;s&lt;/code&gt; is an
&lt;a href=&quot;/hr-state-wrapper&quot;&gt;&lt;code&gt;HrStateWrapper&lt;/code&gt;&lt;/a&gt; instance. You use it to modify the previous
state, producing a new state that the reducer will return.&lt;/p&gt;
&lt;p&gt;The second argument, &lt;code&gt;&apos;payload&apos;&lt;/code&gt;, is simply the action&apos;s &lt;code&gt;&apos;payload&apos;&lt;/code&gt; property,
exposed here for convenience.&lt;/p&gt;
&lt;p&gt;The third argument is the original, unmodified action. For the bulk of the work here,
see the &lt;a href=&quot;/hr-state-wrapper&quot;&gt;&lt;code&gt;HrStateWrapper&lt;/code&gt;&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h2 id=&quot;selectors&quot;&gt;&lt;a href=&quot;#selectors&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selectors&lt;/h2&gt;
&lt;p&gt;This is a WIP. Will be documented when the api stabilizes.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a href=&quot;#summary&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;makeHr&lt;/code&gt; is a powerful abstraction for defining potentially complex states in
your app.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[withProps]]></title><description><![CDATA[withProps Basics]]></description><link>https://brigand.github.iohigh-redux/with-props</link><guid isPermaLink="false">https://brigand.github.iohigh-redux/with-props</guid><category><![CDATA[programming]]></category><category><![CDATA[react]]></category><category><![CDATA[high-redux]]></category><dc:creator><![CDATA[Frankie Bagnardi]]></dc:creator><pubDate>Sun, 01 Jan 2017 07:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;withprops-basics&quot;&gt;&lt;a href=&quot;#withprops-basics&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;withProps Basics&lt;/h2&gt;</content:encoded></item><item><title><![CDATA[Intro]]></title><description><![CDATA[What is High Redux? high-redux is a set of two primary abstractions for improving your react/redux app.
You can use either part on their own...]]></description><link>https://brigand.github.iohigh-redux/intro</link><guid isPermaLink="false">https://brigand.github.iohigh-redux/intro</guid><category><![CDATA[programming]]></category><category><![CDATA[react]]></category><category><![CDATA[high-redux]]></category><dc:creator><![CDATA[Frankie Bagnardi]]></dc:creator><pubDate>Sun, 01 Jan 2017 07:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;what-is-high-redux&quot;&gt;&lt;a href=&quot;#what-is-high-redux&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is High Redux?&lt;/h2&gt;
&lt;p&gt;high-redux is a set of two primary abstractions for improving your react/redux app.
You can use either part on their own, or for best results, use them together.
You &lt;strong&gt;don&apos;t&lt;/strong&gt; need to rewrite your existing code. It&apos;s fully compatible with
existing redux code, any redux middleware, &lt;code&gt;connect()&lt;/code&gt;, &lt;code&gt;&amp;#x3C;Provider&gt;&lt;/code&gt;, etc.&lt;/p&gt;
&lt;h2 id=&quot;install&quot;&gt;&lt;a href=&quot;#install&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;You can install it with &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-sh&quot;&gt;&lt;code&gt;npm install --save high-redux
yarn add high-redux&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;You must also install &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;redux&lt;/code&gt;, and &lt;code&gt;react-redux&lt;/code&gt;, which you likely
already have. We&apos;ll use the version you&apos;ve installed to avoid duplicate code
in the bundle.&lt;/p&gt;
&lt;h2 id=&quot;makehr&quot;&gt;&lt;a href=&quot;#makehr&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;makeHr&lt;/h2&gt;
&lt;p&gt;The first abstraction is &lt;a href=&quot;/make-hr&quot;&gt;&lt;code&gt;makeHr&lt;/code&gt;&lt;/a&gt; which creates an entity. This includes a reducer
and selectors for that reducer. Unlike reducers you might write by hand, we generate
a highly flexible and future-proof state shape, while allowing you to ignore that
in the basic cases of retrieving a value by id or similar.&lt;/p&gt;
&lt;p&gt;The state shape we use allows loading states, error states, and custom metadata
for each item the reducer manages. This also applies to lists, and key/value
data. We use the concept of a &apos;default key&apos; and &apos;named keys&apos;, which work similarly
to ES6 modules.&lt;/p&gt;
&lt;p&gt;This is a very basic example where we supposedly get a user object from an api. We&apos;re
not specifying a key, so the &apos;default key&apos; is used. In the future, we might need
another key-space for secondary information. You never run into a case where
you have to refactor the code using your reducer state when you need to track extra
information.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; userHr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeHr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  actions&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    FETCH_USER_SUCCESS&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;payload&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;For more information, see the &lt;a href=&quot;/make-hr&quot;&gt;&lt;code&gt;makeHr&lt;/code&gt;&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h2 id=&quot;withprops&quot;&gt;&lt;a href=&quot;#withprops&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;withProps&lt;/h2&gt;
&lt;p&gt;The second abstraction is &lt;a href=&quot;/with-props&quot;&gt;&lt;code&gt;withProps&lt;/code&gt;&lt;/a&gt; which is a wrapper around &lt;code&gt;react-redux&lt;/code&gt;&apos;s &lt;code&gt;connect&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; UserDisplay &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;Hi&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;withProps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// When props.id changes, dispatch { type: &apos;FETCH_USER&apos;, payload: { userId: ownProps.id } }&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;watchAndDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;FETCH_USER&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;id&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Create the prop &apos;data&apos; from `userHr`s state for the id we have in props&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;data&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; props&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cars&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;byId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Generate our connect() and watchAndDispatch wrappers, and return the resulting&lt;/span&gt;
  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// component.&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;UserDisplay&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The above shows a very common case that would otherwise be very noisy: requiring
a class component implementing &lt;code&gt;componentDidMount&lt;/code&gt; and &lt;code&gt;componentWillReceiveProps&lt;/code&gt;
(where you further have to diff props), the propTypes for the &lt;code&gt;FETCH_USER&lt;/code&gt; action,
5 lines for &lt;code&gt;mapStateToProps&lt;/code&gt;, and at least 3 lines for &lt;code&gt;mapDispatchToProps&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;From a technical perspective, with &lt;code&gt;watchAndDispatch&lt;/code&gt; we avoid rendering in the
state before &lt;code&gt;watchAndDispatch&lt;/code&gt; dispatches the &lt;code&gt;FETCH_USER&lt;/code&gt; which might set a
loading state or clear out the old data since it runs before &lt;code&gt;mapStateToProps&lt;/code&gt;.
This can be a significant performance boost.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.select&lt;/code&gt; function has extra potential which will be explained in the &lt;code&gt;withProps&lt;/code&gt;
and &lt;code&gt;HrQuery&lt;/code&gt; docs.&lt;/p&gt;
&lt;p&gt;For more information, see the &lt;a href=&quot;/with-props&quot;&gt;&lt;code&gt;withProps&lt;/code&gt;&lt;/a&gt; documentation.&lt;/p&gt;</content:encoded></item></channel></rss>